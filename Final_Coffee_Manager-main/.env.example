# Coffee Manager - Environment Configuration
# Copy this file to .env.local and customize as needed

# ========================================
# API CONFIGURATION
# ========================================

# Backend API base URL
VITE_API_BASE_URL=http://localhost:8080/api

# Enable/disable standalone mode (frontend works without backend)
VITE_STANDALONE_MODE=true

# Request timeout in milliseconds
VITE_REQUEST_TIMEOUT=10000

# Enable debug logging
VITE_DEBUG=true

# ========================================
# AUTHENTICATION CONFIGURATION
# ========================================

# JWT token expiry time in hours
VITE_TOKEN_EXPIRY_HOURS=24

# Demo mode credentials (development only - DO NOT use in production)
VITE_DEMO_PASSWORD=password
VITE_ALLOW_USERNAME_PASSWORD=true

# ========================================
# MACHINE CONFIGURATION
# ========================================

# Default supply level percentage for new machines
VITE_DEFAULT_SUPPLY_LEVEL=100

# Pressure limits for coffee machines
VITE_MIN_PRESSURE=10
VITE_MAX_PRESSURE=20

# ========================================
# ALERT THRESHOLDS
# ========================================

# Supply level thresholds for alerts
VITE_LOW_SUPPLY_WARNING=30
VITE_LOW_SUPPLY_CRITICAL=15

# Maintenance due warning threshold in days
VITE_MAINTENANCE_DUE_DAYS=7

# ========================================
# UI CONFIGURATION
# ========================================

# Data sync interval in milliseconds
VITE_SYNC_INTERVAL=30000

# Alert refresh interval in milliseconds
VITE_ALERT_REFRESH=5000

# UI animation delay in milliseconds
VITE_ANIMATION_DELAY=100

# Maximum number of recent refills to display
VITE_MAX_RECENT_REFILLS=10

# ========================================
# VALIDATION RULES
# ========================================

# Username validation
VITE_USERNAME_MIN=3
VITE_USERNAME_MAX=20

# Password validation
VITE_PASSWORD_MIN=6

# Machine name validation
VITE_MACHINE_NAME_MIN=3
VITE_MACHINE_NAME_MAX=50

# Notes field maximum length
VITE_NOTES_MAX=500

# ========================================
# FEATURE FLAGS
# ========================================

# Enable MQTT real-time communication
VITE_ENABLE_MQTT=false

# Enable real-time alerts
VITE_ENABLE_REAL_TIME_ALERTS=true

# Enable dark mode
VITE_ENABLE_DARK_MODE=true

# Enable offline mode
VITE_ENABLE_OFFLINE_MODE=true

# Enable debug tools (automatically enabled in dev mode)
VITE_ENABLE_DEBUG_TOOLS=false

# ========================================
# DEVELOPMENT CONFIGURATION
# ========================================

# Application name (displayed in UI)
VITE_APP_NAME="Coffee Manager"

# Application version
VITE_APP_VERSION="1.0.0"

# Enable development mode features
NODE_ENV=development

# ========================================
# PRODUCTION NOTES
# ========================================

# For production deployment:
# 1. Set VITE_STANDALONE_MODE=false
# 2. Configure VITE_API_BASE_URL to your backend URL
# 3. Remove or change VITE_DEMO_PASSWORD
# 4. Set VITE_DEBUG=false
# 5. Configure proper authentication system
# 6. Set up real MQTT broker if using real-time features
# 7. Configure CORS settings on your backend
# 8. Set appropriate timeout values for your infrastructure

# ========================================
# BACKEND INTEGRATION
# ========================================

# When integrating with a real backend:
# - Backend should implement the API endpoints defined in config/index.ts
# - Use the same data models and validation rules
# - Implement proper authentication and authorization
# - Consider implementing rate limiting and security headers
# - Set up database with appropriate indexes for performance

# ========================================
# SECURITY CONSIDERATIONS
# ========================================

# - Never commit actual production credentials to version control
# - Use secure random passwords in production
# - Implement proper session management
# - Use HTTPS in production
# - Implement CSRF protection
# - Validate all inputs on both client and server
# - Use environment-specific configuration files
