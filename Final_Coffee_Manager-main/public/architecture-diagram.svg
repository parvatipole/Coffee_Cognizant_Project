<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="1800" height="1100" viewBox="0 0 1800 1100">
  <defs>
    <style>
      .title{font:bold 26px Arial,Helvetica,sans-serif;fill:#111}
      .h{font:bold 18px Arial,Helvetica,sans-serif;fill:#111}
      .t{font:14px Arial,Helvetica,sans-serif;fill:#222}
      .small{font:12px Arial,Helvetica,sans-serif;fill:#333}
      .box{fill:#fff;stroke:#1f2937;stroke-width:2;rx:14;ry:14}
      .cluster{fill:#fafafa;stroke:#374151;stroke-width:2;rx:18;ry:18}
      .arrow{stroke:#1f2937;stroke-width:2.5;marker-end:url(#ah)}
      .dashed{stroke-dasharray:7 7}
      .note{fill:#f9fafb;stroke:#9ca3af;stroke-width:1.5;rx:10;ry:10}
    </style>
    <marker id="ah" markerWidth="12" markerHeight="8" refX="11" refY="4" orient="auto">
      <polygon points="0,0 12,4 0,8" fill="#1f2937"/>
    </marker>
  </defs>

  <rect x="20" y="20" width="1760" height="1060" fill="#ffffff" stroke="#e5e7eb"/>
  <text x="40" y="60" class="title">Coffee Manager – High-Level Architecture</text>

  <!-- USER -->
  <g transform="translate(40,120)">
    <rect class="cluster" x="0" y="0" width="220" height="360"/>
    <text x="20" y="36" class="h">User</text>
    <rect class="box" x="20" y="60" width="180" height="60"/>
    <text class="t" x="36" y="92">View Dashboard</text>
    <rect class="box" x="20" y="130" width="180" height="60"/>
    <text class="t" x="36" y="162">Manage Machines</text>
    <rect class="box" x="20" y="200" width="180" height="60"/>
    <text class="t" x="36" y="232">Update Supplies</text>
    <rect class="box" x="20" y="270" width="180" height="60"/>
    <text class="t" x="36" y="302">Acknowledge Alerts</text>
  </g>

  <!-- FRONTEND -->
  <g transform="translate(300,120)">
    <rect class="cluster" x="0" y="0" width="620" height="560"/>
    <text x="20" y="36" class="h">Front End (React 18 SPA)</text>

    <rect class="box" x="20" y="60" width="280" height="90"/>
    <text class="t" x="36" y="92">UI Layer</text>
    <text class="small" x="36" y="114">React Router 6, Radix UI, TailwindCSS</text>

    <rect class="box" x="320" y="60" width="280" height="90"/>
    <text class="t" x="336" y="92">State & Storage</text>
    <text class="small" x="336" y="114">React Hooks, LocalStorage</text>

    <rect class="box" x="20" y="160" width="280" height="110"/>
    <text class="t" x="36" y="192">Data Layer</text>
    <text class="small" x="36" y="214">client/lib/api.ts</text>
    <text class="small" x="36" y="234">client/lib/dataManager.ts</text>

    <rect class="box" x="320" y="160" width="280" height="110"/>
    <text class="t" x="336" y="192">Realtime (optional)</text>
    <text class="small" x="336" y="214">client/lib/mqtt.ts (WebSocket/MQTT)</text>

    <rect class="box" x="20" y="280" width="580" height="90"/>
    <text class="t" x="36" y="312">Alerts & Analytics</text>
    <text class="small" x="36" y="334">Low supplies, maintenance reminders, trends</text>

    <rect class="note" x="20" y="380" width="580" height="150"/>
    <text class="t" x="36" y="410">Routes</text>
    <text class="small" x="36" y="432">client/pages/Dashboard.tsx, MachineManagement.tsx, OfficeOverview.tsx, Login.tsx</text>
    <text class="small" x="36" y="454">components/ui/* for UI primitives</text>
    <text class="small" x="36" y="476">Standalone mode: automatic fallback to LocalStorage when backend unavailable</text>
  </g>

  <!-- DEV SERVER -->
  <g transform="translate(960,120)">
    <rect class="cluster" x="0" y="0" width="360" height="240"/>
    <text x="20" y="36" class="h">Dev Server (Local)</text>
    <rect class="box" x="20" y="60" width="320" height="70"/>
    <text class="t" x="36" y="92">Vite Dev Server (HMR)</text>
    <rect class="box" x="20" y="140" width="320" height="70"/>
    <text class="t" x="36" y="172">API Stubs server/index.ts (/api/*)</text>
  </g>

  <!-- BACKEND -->
  <g transform="translate(960,380)">
    <rect class="cluster" x="0" y="0" width="360" height="400"/>
    <text x="20" y="36" class="h">Backend (Integration)</text>
    <rect class="box" x="20" y="60" width="320" height="80"/>
    <text class="t" x="36" y="92">Node.js Express (/api/*)</text>
    <text class="small" x="36" y="114">Endpoints: auth, machines, locations</text>

    <rect class="box" x="20" y="150" width="320" height="60"/>
    <text class="t" x="36" y="186">Alternative: backend-java/ (Spring)</text>

    <rect class="box" x="20" y="215" width="320" height="70"/>
    <text class="t" x="36" y="247">Database</text>
    <text class="small" x="36" y="269">Postgres/Neon (via ORM)</text>

    <rect class="box" x="20" y="290" width="320" height="70"/>
    <text class="t" x="36" y="322">Observability (optional)</text>
    <text class="small" x="36" y="344">Sentry, logs, metrics</text>
  </g>

  <!-- BUILD & DEPLOY -->
  <g transform="translate(300,720)">
    <rect class="cluster" x="0" y="0" width="620" height="220"/>
    <text x="20" y="36" class="h">Build & Deployment</text>
    <rect class="box" x="20" y="60" width="170" height="60"/>
    <text class="t" x="36" y="92">vite build → dist/</text>
    <rect class="box" x="210" y="60" width="190" height="60"/>
    <text class="t" x="226" y="92">vite preview / npm start</text>
    <rect class="box" x="410" y="60" width="190" height="60"/>
    <text class="t" x="426" y="92">Hosting/CDN (Netlify)</text>
    <rect class="note" x="20" y="130" width="580" height="70"/>
    <text class="small" x="36" y="164">Env: VITE_STANDALONE_MODE, VITE_API_BASE_URL, VITE_DEBUG</text>
  </g>

  <!-- FLOWS -->
  <!-- User -> Frontend -->
  <line class="arrow" x1="260" y1="220" x2="300" y2="220"/>
  <line class="arrow" x1="260" y1="290" x2="300" y2="290"/>
  <line class="arrow" x1="260" y1="360" x2="300" y2="360"/>

  <!-- Frontend API calls: dev vs prod -->
  <line class="arrow" x1="920" y1="210" x2="960" y2="210"/>
  <text class="small" x="780" y="195">/api/* during development</text>

  <line class="arrow" x1="920" y1="460" x2="960" y2="460"/>
  <text class="small" x="780" y="445">/api/* in production</text>

  <!-- Fallback to LocalStorage -->
  <line class="arrow dashed" x1="610" y1="520" x2="490" y2="520"/>
  <text class="small" x="510" y="540">Fallback when backend unavailable</text>

  <!-- Realtime -->
  <line class="arrow dashed" x1="610" y1="215" x2="920" y2="215"/>
  <text class="small" x="700" y="200">WebSocket/MQTT events</text>

  <!-- Build output to Hosting -->
  <line class="arrow" x1="610" y1="840" x2="610" y2="700"/>
  <text class="small" x="620" y="780">Static assets served to Client</text>

</svg>
